:quit
xs == ys
let ys = [1] ++ [2,3]
let xs = 1:2:3:[]
xs == ys
let ys = [1] ++ [2,3]
let xs = 1:2:3:[]
xs == ys
let ys = [1] ++ [2,3]
let xs = 1:2:3:[]
let empty = []
1:xs
xs ++ ys
let ys = [4,5,6]
let xs = [1,2,3]
:quit
let eq = [1,2] == [1,2]
let nested = [[1,2], [3,4]]
let head (x:xs) = x
let empty = []
:quit
let eq = [1,2] == [1,2]
let nested = [[1,2], [3,4]]
let head (x:xs) = x
let empty = []
1:xs
xs ++ ys
let ys = [4,5,6]
let xs = [1,2,3]
:quit
let xs = [1,2,3]
:quit
1:xs  
xs ++ ys
let ys = [4,5,6]
let xs = [1,2,3]
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 2
f 1
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 2
f 1
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
f 2
f 1
f 0
let f n = n + 1
let f 1 = 1
let f 0 = 0
:quit
[1,2] ++ [3,4]
[1,2] ++ [3,4}
let h (x:y:xs) = x + y  
let g (x:y:[]) = x + y 
let f (x:[]) = x 
:quit
let h (x:y:xs) = x + y
let g (x:y:[]) = x + y 
